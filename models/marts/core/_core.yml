# https://docs.getdbt.com/docs/build/tests

version: 2

models:

  - name: dim_customers
    description: |
      One record per customer in the source data.

      `dbt-profiler` results:

      {{ doc("dbt_profiler__dim_customers") }}
    columns:
      - name: customer_id
        description: Primary key
        tests:
          - unique
          - not_null
          - positive_value
      - name: first_name
        description: First name of the customer.
      - name: last_name
        description: Last name of the customer.
      - name: first_order_date
        description: NULL when a customer has not yet placed an order.
      - name: most_recent_order_date
        description: NULL when a customer has not yet placed an order.
      - name: lifetime_value
        description: Total amount a customer has spent at jaffle shop.
      - name: number_of_orders
        description: Number of orders a customer has placed at jaffle shop.
        tests:
          - not_null

  - name: fct_orders
    description: |
      One record per customer in the source data.

      `dbt-profiler` results:

      {{ doc("dbt_profiler__fct_orders") }}
    tests:
      # generic tests from dbt utils
      # https://hub.getdbt.com/dbt-labs/dbt_utils/latest
      - dbt_utils.expression_is_true:
          expression: "amount >= 0 and amount < 100"
    columns:
      - name: order_id
        description: Order ID placed by a customer
        tests:
          - not_null
          - relationships:
              to: ref('stg_orders')
              field: order_id
      - name: customer_id
        description: Customer ID who placed the order
        tests:
          - not_null
          - relationships:
              to: ref('stg_customers')
              field: customer_id
      - name: payment_method
        tests:
          - accepted_values:
              values:
                ["credit_card", "coupon", "bank_transfer", "gift_card"]
      - name: payment_status
        tests:
          - accepted_values:
              values:
                ["success", "fail"]
      - name: order_status
        tests:
          - accepted_values:
              values:
                ["placed", "shipped", "completed", "return_pending", "returned"]
              # test configuration
              # can be defined as {{ config(...) }} in generic tests
              # or at the project level
              config:
                severity: warn
                warn_if: ">10"
                error_if: ">20"
                where_date: "order_date > '2015-01-01" # ignore records before that date
                limit: 100 # do not report more than 100 errors
                store_failures: true
      - name: amount
        description: Order amount
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_between:
              min_value: 0
              max_value: 100
              row_condition: "order_id is not null"
              strictly: False
      - name: payment_date
        description: Order amount
        tests:
          - not_null
      - name: order_date
        description: Order amount
        tests:
          - not_null
