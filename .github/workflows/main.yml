name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  schedule:
    - cron: '0 * * * *'  # This runs the workflow every hour
    # - cron: '0 10 * * *'  # This runs the workflow every day at 10 AM
  workflow_dispatch:

env:
  DBT_PROFILES_DIR: /home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/.github
  PROFILES_YML_SNOWFLAKE_ACCOUNT: ${{ secrets.PROFILES_YML_SNOWFLAKE_ACCOUNT }}
  PROFILES_YML_SNOWFLAKE_USER: ${{ secrets.PROFILES_YML_SNOWFLAKE_USER }}
  PROFILES_YML_SNOWFLAKE_PASSWORD: ${{ secrets.PROFILES_YML_SNOWFLAKE_PASSWORD }}
  PROFILES_YML_SNOWFLAKE_ROLE: ${{ secrets.PROFILES_YML_SNOWFLAKE_ROLE }}
  PROFILES_YML_SNOWFLAKE_DATABASE: ${{ secrets.PROFILES_YML_SNOWFLAKE_DATABASE }}
  PROFILES_YML_SNOWFLAKE_SCHEMA: "CI_GHA_${{ github.run_id }}"
  PROFILES_YML_SNOWFLAKE_WAREHOUSE: ${{ secrets.PROFILES_YML_SNOWFLAKE_WAREHOUSE }}

jobs:

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Clone Repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'

      - name: Install python dependencies
        run: pip install --no-dependencies -r requirements.txt

      - name: Install dbt dependencies
        run: dbt deps

      - name: Test data source freshness
        run: make check-src-freshness

      - name: Build and test models
        run: make test

      - name: Test coverage
        run: make test-coverage

      - name: Upload compiled SQL files as artifact
        uses: actions/upload-artifact@v3
        with:
          name: target
          path: target

  lint:
    runs-on: ubuntu-latest
    needs: [test]
    timeout-minutes: 5
    steps:
      - name: Clone Repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'

      - name: Install python dependencies
        run: pip install --no-dependencies -r requirements.txt

      - name: Check Snowflake DWH connection
        run: dbt debug

      - name: Install dbt dependencies
        run: dbt deps

      - name: Check code is linted
        run: make lint

      - name: Evaluate dbt Labs' best practices
        run: make check

  cleanup:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    needs: [lint]
    if: always()
    steps:
      - name: Clone Repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'

      - name: Install python dependencies
        run: pip install --no-dependencies -r requirements.txt

      - name: Install dbt dependencies
        run: dbt deps

      - name: Cleanup target schema
        run: dbt run-operation drop_schema
